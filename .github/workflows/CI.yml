name: Deploy to GKE

on: [push]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: area-cluster
  GKE_ZONE: europe-west1-b
  DEPLOYMENT_NAME: sveltekit-deployment
  IMAGE: sveltekit-app

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Install gke-gcloud-auth-plugin manually'
        run: |
          curl -o gke-gcloud-auth-plugin https://storage.googleapis.com/gke-gcloud-auth-plugin/linux_amd64/gke-gcloud-auth-plugin
          chmod +x gke-gcloud-auth-plugin
          sudo mv gke-gcloud-auth-plugin /usr/local/bin/
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True

      - name: 'Install kubectl'
        run: |
          sudo apt-get update && sudo apt-get install -y kubectl

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: 'Debug: Check permissions'
        run: |
          gcloud auth list
          gcloud projects get-iam-policy $PROJECT_ID --flatten="bindings[].members" --format='table(bindings.role)' --filter="bindings.members:$(gcloud config get-value account)"
          gcloud artifacts repositories list --project=$PROJECT_ID
          gcloud container clusters list --project=$PROJECT_ID

      # Configure Docker to use the gcloud command-line tool as a credential helper
      - run: |-
          gcloud --quiet auth configure-docker

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            ./frontend

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      # Deploy the Docker image to the GKE cluster without Kustomize
      - name: Deploy
        run: |-
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID
          kubectl set image deployment/$DEPLOYMENT_NAME sveltekit-container=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
