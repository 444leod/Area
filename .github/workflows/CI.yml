name: Deploy to GKE
on: [push]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: area-cluster
  GKE_ZONE: europe-west1-b
  FRONTEND_DEPLOYMENT_NAME: sveltekit-deployment
  FRONTEND_IMAGE: frontend
  BACKEND_DEPLOYMENT_NAME: nestjs-deployment
  BACKEND_IMAGE: backend

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      # Configure Docker to use the gcloud command-line tool as a credential helper
      - run: |-
          gcloud --quiet auth configure-docker

      # Build and push the Frontend Docker image
      - name: Build Frontend
        run: |-
          docker build \
            -t "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$GITHUB_SHA" \
            -f apps/frontend/Dockerfile \
            .
          docker push "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$GITHUB_SHA"
          docker tag "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$GITHUB_SHA" "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:latest"
          docker push "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:latest"

      - name: Build Backend
        run: |-
          docker build \
            -t "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$GITHUB_SHA" \
            -f apps/api/Dockerfile \
            .
          docker push "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$GITHUB_SHA"
          docker tag "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$GITHUB_SHA" "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:latest"
          docker push "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:latest"

      # Deploy the Docker images to the GKE cluster
      - name: Deploy
        run: |-
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID
          kubectl set image deployment/$FRONTEND_DEPLOYMENT_NAME sveltekit-container=gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$GITHUB_SHA
          kubectl set image deployment/$BACKEND_DEPLOYMENT_NAME nestjs-container=gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$GITHUB_SHA
          kubectl rollout restart deployment/$FRONTEND_DEPLOYMENT_NAME
          kubectl rollout status deployment/$FRONTEND_DEPLOYMENT_NAME
          kubectl get services -o wide

      # Apply the Kubernetes configurations
      - name: Apply Kubernetes configurations
        run: |-
          kubectl apply -f apps/frontend/prodConfig/sveltekit-deploy.yml
          kubectl apply -f apps/frontend/prodConfig/sveltekit-service.yml
          kubectl apply -f apps/api/prodConfig/nestjs-deploy.yml
          kubectl apply -f apps/api/prodConfig/nestjs-service.yml