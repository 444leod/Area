name: Deploy to GKE
on: [push]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: area-cluster
  GKE_ZONE: europe-west1-b
  FRONTEND_DEPLOYMENT_NAME: sveltekit-deployment
  FRONTEND_IMAGE: frontend
  BACKEND_DEPLOYMENT_NAME: nestjs-deployment
  BACKEND_IMAGE: backend

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Configure Docker
        run: gcloud --quiet auth configure-docker

      - name: Build and push Frontend Docker image
        run: |
          docker build -t "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$GITHUB_SHA" -f apps/frontend/Dockerfile .
          docker push "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$GITHUB_SHA"

      - name: Build and push Backend Docker image
        run: |
          docker build -t "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$GITHUB_SHA" -f apps/api/Dockerfile .
          docker push "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$GITHUB_SHA"

      - name: Build and push RabbitMQ Docker image
        run: |
          docker build -t "gcr.io/$PROJECT_ID/rabbitmq:$GITHUB_SHA" -f apps/queue/Dockerfile .
          docker push "gcr.io/$PROJECT_ID/rabbitmq:$GITHUB_SHA"

      - name: Build and push Task Manager Docker image
        run: |
          docker build -t "gcr.io/$PROJECT_ID/manager:$GITHUB_SHA" -f apps/task_manager/Dockerfile .
          docker push "gcr.io/$PROJECT_ID/manager:$GITHUB_SHA"

      - name: Get GKE Credentials
        run: gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

      - name: Update deployment files
        run: |
          sed -i 's|\$PROJECT_ID|'$PROJECT_ID'|g' apps/frontend/prodConfig/sveltekit-deploy.yml
          sed -i 's|\$PROJECT_ID|'$PROJECT_ID'|g' apps/api/prodConfig/nestjs-deploy.yml
          sed -i 's|\$PROJECT_ID|'$PROJECT_ID'|g' apps/queue/prodConfig/rabbitmq-deploy.yml
          sed -i 's|\$PROJECT_ID|'$PROJECT_ID'|g' apps/task_manager/prodConfig/task-manager.yml
          sed -i 's|\$GITHUB_SHA|'$GITHUB_SHA'|g' apps/frontend/prodConfig/sveltekit-deploy.yml
          sed -i 's|\$GITHUB_SHA|'$GITHUB_SHA'|g' apps/api/prodConfig/nestjs-deploy.yml
          sed -i 's|\$GITHUB_SHA|'$GITHUB_SHA'|g' apps/queue/prodConfig/rabbitmq-deploy.yml
          sed -i 's|\$GITHUB_SHA|'$GITHUB_SHA'|g' apps/task_manager/prodConfig/task-manager.yml


      - name: Apply Kubernetes configurations
        run: |
          kubectl apply -f apps/frontend/prodConfig/sveltekit-deploy.yml
          kubectl apply -f apps/frontend/prodConfig/sveltekit-service.yml
          kubectl apply -f apps/api/prodConfig/nestjs-deploy.yml
          kubectl apply -f apps/api/prodConfig/nestjs-service.yml
          kubectl apply -f apps/queue/prodConfig/rabbitmq-deploy.yml
          kubectl apply -f apps/queue/prodConfig/rabbitmq-service.yml
          kubectl apply -f apps/task_manager/prodConfig/task-manager.yml

      - name: Update deployments
        run: |
          kubectl set image deployment/$FRONTEND_DEPLOYMENT_NAME sveltekit-container=gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$GITHUB_SHA
          kubectl set image deployment/$BACKEND_DEPLOYMENT_NAME nestjs-container=gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$GITHUB_SHA
          kubectl set image deployment/rabbitmq-deployment rabbitmq-container=gcr.io/$PROJECT_ID/rabbitmq:$GITHUB_SHA
          kubectl set image deployment/task-manager-deployment task-manager-container=gcr.io/$PROJECT_ID/manager:$GITHUB_SHA
          kubectl rollout restart deployment/$FRONTEND_DEPLOYMENT_NAME
          kubectl rollout restart deployment/$BACKEND_DEPLOYMENT_NAME
          kubectl rollout restart deployment/rabbitmq-deployment
          kubectl rollout restart deployment/task-manager-deployment
          kubectl rollout status deployment/$FRONTEND_DEPLOYMENT_NAME
          kubectl rollout status deployment/$BACKEND_DEPLOYMENT_NAME
          kubectl rollout status deployment/rabbitmq-deployment
          kubectl rollout status deployment/task-manager-deployment